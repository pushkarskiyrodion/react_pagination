{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","items","currentPage","perPage","onPageChange","lastPage","Math","ceil","length","displayPagination","Array","from","_","i","map","page","className","cn","active","href","onClick","disabled","currPage","units","forPage","startIndex","endIndex","slice","unit","filteredItems","itemsList","to","numbers","n","push","getNumbers","App","useState","setPerPage","setCurrentPage","min","id","value","onChange","e","parseInt","target","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAA8B,SAAC,GAErC,IADLC,EACI,EADJA,MAAOC,EACH,EADGA,YAAaC,EAChB,EADgBA,QAASC,EACzB,EADyBA,aAEvBC,EAAWC,KAAKC,KAAKN,EAAMO,OAASL,GAEpCM,EAAoBC,MAAMC,KAAK,CAAEH,OAAQH,IAAY,SAACO,EAAGC,GAAJ,OAAUA,EAAI,KACtEC,KAAI,SAAAC,GAAI,OACP,oBAEEC,UACEC,IACE,YACA,CAAEC,OAAQhB,IAAgBa,IALhC,SASE,mBACEI,KAAI,WAAMJ,GACV,UAAQ,WACRC,UAAU,YACVI,QAAS,kBAAMhB,EAAaW,IAJ9B,SAMGA,KAdEA,MAwCX,OACE,qCACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UACFC,IACE,YACA,CAAEI,SAA0B,IAAhBnB,IAHhB,SAOE,mBACE,UAAQ,WACRc,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBjB,EACfkB,QAAS,WAvBK,IAACE,EACvBlB,GADuBkB,EAuBepB,GAtBd,EAAIoB,EAAW,EAAI,IAiBrC,oBAWDb,EAED,oBAAIO,UACFC,IACE,YACA,CAAEI,SAAUnB,IAAgBG,IAHhC,SAOE,mBACE,UAAQ,WACRW,UAAU,YACVG,KAAK,QACL,gBAAejB,IAAgBG,EAC/Be,QAAS,WAvCQ,IAACE,EAC1BlB,GAD0BkB,EAuCepB,GAtCjBG,EAAWiB,EAAW,EAAIjB,IAiC5C,uBAYJ,6BA/DkB,SACpBkB,EAAiBC,EAAiBF,GAElC,IAAMG,GAAcH,EAAW,GAAKE,EAC9BE,EAAWD,EAAaD,EAE9B,OAAOD,EAAMI,MAAMF,EAAYC,GAAUZ,KAAI,SAAAc,GAAI,OAC/C,oBAAe,UAAQ,OAAvB,SACGA,GADMA,MAyDNC,CAAc5B,EAAOE,EAASD,SC7FvC,IAAM4B,ECPC,SAAoBnB,EAAcoB,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAItB,EAAMsB,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDASG,CAAW,EAAG,IAC7BrB,KAAI,SAAAmB,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOlC,EAAP,KAAgBmC,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOnC,EAAP,KAAoBqC,EAApB,KACA,EAAgBF,mBAASP,GAAlB7B,EAAP,oBAOMU,GAAQT,EAAc,GAAKC,EAC3B4B,EAAKzB,KAAKkC,IAAI7B,EAAOR,EAASF,EAAMO,QAE1C,OACE,sBAAKQ,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWd,EADX,mBACiCS,EAAO,EADxC,cAC+CoB,EAD/C,eACwD9B,EAAMO,OAD9D,OAIA,sBAAKQ,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRyB,GAAG,kBACHzB,UAAU,eACV0B,MAAOvC,EACPwC,SAvBW,SAACC,GACpBN,EAAWO,SAASD,EAAEE,OAAOJ,MAAO,KACpCH,EAAe,IAgBT,UAOE,wBAAQG,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkB/B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEf,MAAOA,EACPC,YAAaA,EACbC,QAASA,EACTC,aAAcmC,QErDtBS,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.48b2c92a.chunk.js","sourcesContent":["import cn from 'classnames';\n\ntype Props = {\n  items: string[],\n  currentPage: number,\n  perPage: number,\n  onPageChange: (value: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  items, currentPage, perPage, onPageChange,\n}) => {\n  const lastPage = Math.ceil(items.length / perPage);\n\n  const displayPagination = Array.from({ length: lastPage }, (_, i) => i + 1)\n    .map(page => (\n      <li\n        key={page}\n        className={\n          cn(\n            'page-item',\n            { active: currentPage === page },\n          )\n        }\n      >\n        <a\n          href={`#${page}`}\n          data-cy=\"pageLink\"\n          className=\"page-link\"\n          onClick={() => onPageChange(page)}\n        >\n          {page}\n        </a>\n      </li>\n    ));\n\n  const filteredItems = (\n    units: string[], forPage: number, currPage: number,\n  ) => {\n    const startIndex = (currPage - 1) * forPage;\n    const endIndex = startIndex + forPage;\n\n    return units.slice(startIndex, endIndex).map(unit => (\n      <li key={unit} data-cy=\"item\">\n        {unit}\n      </li>\n    ));\n  };\n\n  const handleMoveBack = ((currPage: number) => {\n    onPageChange(currPage > 1 ? currPage - 1 : 1);\n  });\n\n  const handleMoveForward = ((currPage: number) => {\n    onPageChange(currPage < lastPage ? currPage + 1 : lastPage);\n  });\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={\n          cn(\n            'page-item',\n            { disabled: currentPage === 1 },\n          )\n        }\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={() => handleMoveBack(currentPage)}\n          >\n            «\n          </a>\n        </li>\n\n        {displayPagination}\n\n        <li className={\n          cn(\n            'page-item',\n            { disabled: currentPage === lastPage },\n          )\n        }\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === lastPage}\n            onClick={() => handleMoveForward(currentPage)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n\n      <ul>\n        {filteredItems(items, perPage, currentPage)}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport { Pagination } from './components/Pagination';\n\nimport { getNumbers } from './utils';\n\nconst itemsList = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [items] = useState(itemsList);\n\n  const handleSelect = (e: React.BaseSyntheticEvent) => {\n    setPerPage(parseInt(e.target.value, 10));\n    setCurrentPage(1);\n  };\n\n  const from = (currentPage - 1) * perPage;\n  const to = Math.min(from + perPage, items.length);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${from + 1} - ${to} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handleSelect}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        items={items}\n        currentPage={currentPage}\n        perPage={perPage}\n        onPageChange={setCurrentPage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}